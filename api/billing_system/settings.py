"""
Django settings for billing_system project.

Generated by 'django-admin startproject' using Django 3.2.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from datetime import timedelta
from pathlib import Path
from django.contrib.messages import constants as messages
import os

MESSAGE_TAGS = {
    messages.DEBUG: 'text-blue-600',
    messages.INFO: 'text-blue-600',
    messages.SUCCESS: 'text-green-600',
    messages.WARNING: 'text-orange-600',
    messages.ERROR: 'text-red-600',
}

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-t)*h*0dsuk6^gneo2^x6k-(651vl8yyh_!+us82ji!9pzzfk4^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["127.0.0.1", 'localhost:3000', '192.168.1.70', '192.168.1.70', 'localhost',
                 "katiroll.localhost", "mahol.localhost"]


REST_FRAMEWORK = {
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(hours=12),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
}

# Application definition

INSTALLED_APPS = [
    'companyinfo.apps.CompanyinfoConfig',
    'table.apps.TableConfig',
    'category.apps.CategoryConfig',
    'users.apps.UsersConfig',
    'billing.apps.BillingConfig',
    'expenses.apps.ExpensesConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ckeditor',
    'ckeditor_uploader',
    # 'crispy_forms',
    'widget_tweaks',
    'corsheaders',
    'rest_framework_simplejwt.token_blacklist',
]
CKEDITOR_UPLOAD_PATH = "uploads/"

DJANGO_WYSIWYG_FLAVOR = "ckeditor"
AWS_QUERYSTRING_AUTH = False
CKEDITOR_ALLOW_NONIMAGE_FILES = False


CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Custom',
        'height': 300,
        'width': 900,
        'toolbar_Custom': [
            ['Bold', 'Italic', 'Underline'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-',
                'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
            ['Link', 'Unlink'],
            ['RemoveFormat', 'Source']
        ]
    }
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "tenants.middlewares.TenantMiddleware",
]

ROOT_URLCONF = 'billing_system.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'billing_system.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'NAME': 'intelzy',
        'ENGINE': 'django.db.backends.postgresql',
        'USER': 'myuser',
        'PASSWORD': 'test12345',
        'HOST': 'localhost',
        'PORT': 5432
    },
    'katiroll': {
        'NAME': 'katiroll',
        'ENGINE': 'django.db.backends.postgresql',
        'USER': 'myuser',
        'PASSWORD': 'test12345',
        'HOST': 'localhost',
        'PORT': 5432
    }
    # 'default': {
    #     'NAME': 'default',
    #     'ENGINE': 'django.db.backends.postgresql',
    #     'USER': 'postgres',
    #     'PASSWORD': 'password'
    # },
    # 'katiroll': {
    #     'NAME': 'katiroll',
    #     'ENGINE': 'django.db.backends.postgresql',
    #     'USER': 'postgres',
    #     'PASSWORD': 'password'
    # },
    # 'mahol': {
    #     'NAME': 'mahol',
    #     'ENGINE': 'django.db.backends.postgresql',
    #     'USER': 'postgres',
    #     'PASSWORD': 'password'
    # }

}

DATABASE_ROUTERS = ['tenants.router.TenantRouter']

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kathmandu'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

LOGIN_REDIRECT_URL = '/'
LOGIN_URL = 'login'
# LOGOUT_REDIRECT_URL = 'admin'


STATIC_ROOT = os.path.join(BASE_DIR, 'static')

CORS_ALLOW_ALL_ORIGINS = True

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:8000",
    'http://192.168.1.70:8001',

]


CSRF_TRUSTED_ORIGINS = ['http://192.168.1.70:8001',
                        'http://localhost:3000', 'http:127.0.0.1:8000']

SITE_ID = 1
